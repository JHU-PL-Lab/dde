(set-logic HORN)
(set-option :fp.xform.inline_linear false)
(set-option :fp.xform.inline_eager false)
(declare-fun P1 (Int) Bool)
(declare-fun P9 (Int) Bool)
(declare-fun P2 (Int) Bool)
(declare-fun P5 (Int) Bool)
(declare-fun P7 (Int) Bool)
(declare-fun P8 (Int) Bool)
(declare-fun P6 (Int) Bool)
(declare-fun P3 (Int) Bool)
(declare-fun P4 (Int) Bool)
(declare-fun P10 (Int) Bool)
(assert (forall ((r Int)) (=> (and (P9 r) true) (P1 r))))
(assert (forall ((r Int)) (=> (P5 r) (P2 r))))
(assert (forall ((r Int)) (=> (P8 r) (P7 r))))
(assert (forall ((r Int)) (=> (and (P6 r) true) (P8 r))))
(assert (forall ((r Int)) (=> (P3 r) (P2 r))))
(assert (forall ((r Int)) (=> (and (P4 r) true) (P3 r))))
(assert (forall ((r Int)) (=> (P1 r) (= r 1))))
(assert (P4 1))
(assert (forall ((r Int)) (=> (and (P2 r) true) (P10 r))))
(assert (forall ((r Int)) (=> (P10 r) (P9 r))))
(assert (forall ((r Int)) (=> (and (P7 r) true) (P5 r))))
(check-sat)
(get-model)